<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Nate Dickson]]></title>
  <link href="http://PogiNate.github.com/atom.xml" rel="self"/>
  <link href="http://PogiNate.github.com/"/>
  <updated>2013-04-30T12:37:22-06:00</updated>
  <id>http://PogiNate.github.com/</id>
  <author>
    <name><![CDATA[Nate Dickson]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Battery Status in tmux]]></title>
    <link href="http://PogiNate.github.com/blog/2013/04/30/battery-status-in-tmux/"/>
    <updated>2013-04-30T10:25:00-06:00</updated>
    <id>http://PogiNate.github.com/blog/2013/04/30/battery-status-in-tmux</id>
    <content type="html"><![CDATA[<p>While I usually work plugged into power and a monitor and all that good stuff, there are times where my MacBook Pro and I need to go off the grid for a while. During those times I’ve found that it’s easiest to have a terminal window fullscreen and do everything via the command line. That way I don’t really need a mouse at all and I can keep my hands on the keyboard doing whatever it is I’m doing that day. If I need any of my GUI apps <a href="http://www.alfredapp.com/">Alfred</a> is always right there to help me out, again, without using the trackpad. </p>

<p><span class="pullquote-right" data-pullquote="let&#8217;s be honest: This entire project came about simply because I wanted to add some graphics to tmux.">
The one <sup id="fnref:minor"><a href="#fn:minor" rel="footnote">1</a></sup> problem is that when an app is full screen you can’t see your battery percentage, and it’s possible to actually run yourself out of power without really knowing how close you are. Okay, I admit that it’s a minor problem, and highly unlikely. So let’s be honest: This entire project came about simply because I wanted to add some graphics to tmux. Ever since I learned you can use <a href="https://en.wikipedia.org/wiki/Apple_Color_Emoji">Apple’s Color Emoji</a> set in terminal windows I’ve been looking for even a semi-useful way to do so. 
</span></p>

<p>What inspired me was a little section at the end of <a href="http://pragprog.com/book/bhtmux/tmux">Brian Hogan’s tmux book</a> about adding battery status to your status bar at the bottom of tmux windows. He links to <a href="https://raw.github.com/richoH/dotfiles/master/bin/battery">a script</a> that works cross platform, but that’s not really what I wanted. As Steve Jobs once said, if you’re working cross platform, you’re not getting the most out of your specific platform<sup id="fnref:kinda"><a href="#fn:kinda" rel="footnote">2</a></sup>. So I decided to write my own script.</p>

<p>doing a little bit of searching revealed this lovely command that appears to be OSX specific:</p>

<pre><code>pmset -g batt
</code></pre>

<p>running this will give you a result like this:</p>

<pre><code>Currently drawing from 'Battery Power'
  -InternalBattery-0     100%; discharging; 6:44 remaining
</code></pre>

<p>As you can see, this string is just begging to be pulled apart via regular expressions. So that’s exactly what I did. The first line is super easy to parse; there are only two possible strings (as near as I can tell) that go between the single quotes: </p>

<ul>
  <li>Battery Power</li>
  <li>AC Power</li>
</ul>

<p>So grabbing that string gives us a simple way to know where our energy is coming from. I didn’t want to just <em>say</em> “Battery” or “AC”, though, so I’m using the emoji for battery and lightning respectively<sup id="fnref:plug"><a href="#fn:plug" rel="footnote">3</a></sup>.</p>

<p>On the second line there are three things we want to know: how charged the battery is, if it’s charging or discharging (or charged) and how long until it’s done doing what it’s doing. I decided to represent the charge level of the battery using five stars, because that fits nicely and a 5-star system makes sense to people. I didn’t even need emoji for full or hollow stars, they’re part of UTF-8, so that was even easier. After a little thought I decided (for now) not to represent the charging/discharging/charged state specifically. I’m still capturing it, I’m just not displaying it.</p>

<p>So a few minutes of ruby hacking later and I have a script that gets me all the info I need and displays it using pretty pictures. Now all I need to do is get it into tmux. Fortunately that was also very simple. This line: </p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>Display Battery Info </span><a href="https://raw.github.com/PogiNate/dots/master/home/.tmux.conf">Link to file on Github </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="nb">set</span> -g status-right <span class="s2">&quot;#[fg=colour155]#(pmset -g batt | ~/bin/battinfo.rb) | #[fg=colour45]%d %b %R&quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>runs the <code>pmset</code> command and my script and gives me a nice green row of stars and a cyan-ish date, like so:</p>

<p><img src="http://PogiNate.github.com/assets/images/charged.png" title="Charged tmux status bar" /></p>

<p>And like so:</p>

<p><img src="http://PogiNate.github.com/assets/images/battery.png" title="Battery power tmux status bar" /></p>

<p>It shows one star empty the moment the battery level falls below 100%, because of math, but I’m fine with that.</p>

<p>So: about an hour’s worth of work for something that will technically save me no time at all, ever. According to<a href="http://xkcd.com/1205/"> XKCD’s chart</a>, it wasn’t worth the time, but I’m still perfectly happy with it. I’m considering updating the script to be more tmux-specific, perhaps even coloring the output based on the charging state, but for now this is good and isn’t terribly distracting.</p>

<p>Anyway, the battinfo.rb script is below, my <code>.tmux.conf</code> file is on github with all <a href="https://github.com/PogiNate/dots">my other dot files</a>.</p>

<div><script src="https://gist.github.com/5490603.js"></script>
<noscript><pre><code /></pre></noscript></div>

<div class="footnotes">
  <ol>
    <li id="fn:minor">
      <p>very <em>very</em> minor<a href="#fnref:minor" rel="reference">&#8617;</a></p>
    </li>
    <li id="fn:kinda">
      <p>or <a href="http://www.apple.com/hotnews/thoughts-on-flash/">words to that effect</a>: “The third party may not adopt enhancements from one platform unless they are available on all of their supported platforms. Hence developers only have access to the lowest common denominator set of features.”<a href="#fnref:kinda" rel="reference">&#8617;</a></p>
    </li>
    <li id="fn:plug">
      <p>There is an emoji power plug symbol, but it doesn’t show up well on a black background.<a href="#fnref:plug" rel="reference">&#8617;</a></p>
    </li>
  </ol>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Thoughts on Introversion]]></title>
    <link href="http://PogiNate.github.com/blog/2013/04/20/thoughts-on-introversion/"/>
    <updated>2013-04-20T11:04:00-06:00</updated>
    <id>http://PogiNate.github.com/blog/2013/04/20/thoughts-on-introversion</id>
    <content type="html"><![CDATA[<p>I’ve never been a fan of cities. New York and Los Angeles hold no fascination for me. Rome is historically interesting, but I wouldn’t ever want to actually <em>go</em> there. I’d rather spend some time in the Italian countryside somewhere, out of the way of the crowds and slowly learning Italian.</p>

<p>Or I could spend my time in suburban Utah. The hills don’t stay as green, and we have a lot of snow and cold and suchlike to deal with, but on the other hand I don’t have to learn Italian. </p>

<p>But cities spread, and they spread around those of us who moved here specifically to <em>avoid</em> them. It doesn’t seem fair. The biggest challenge facing us introverts is accepting the fact that we’re connected to all those other people all over the place; you know, the ones we’re being introverted from. Extroverts like us, because they like <em>everybody</em>, a fact we can’t quite make ourselves believe. But for them people are as necessary<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup> as solitude is for us; they seek out people the way we seek out quiet places. </p>

<p>So cities spread, communities form. In our more rational moments we introverts can accept that community and civilization are important, we just don’t want them around <em>here</em>.</p>

<p>Then there are the even more conflicted introverts; the ones who need the city support system to provide them with quiet little coffee houses and public transportation and eclectic bookstores. Forever taunting themselves with the crowds of happy people that don’t include them, knowing (because all introverts are amazingly, painfully self-aware<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup>) that the crowds <em>probably</em> aren’t judging them, that the only thing stopping the introvert from packing up his journal and latte and finding happiness in the company of other people is his own blasted self.</p>

<p>And there are those of us (like me) who enjoy time with people, but still need to make a quiet retreat into our own little world, where our thoughts are the only ones around and we can start to decompress, unwind, and come up with other metaphors for releasing stress after being stressed out in a fun (but tension causing) social setting. </p>

<p><span class="pullquote-right" data-pullquote="… which is part of why I&#8217;m a blogger instead of a city councilor. Or whatever it is more extroverted people do.">
People often talk about having an “introvert battery” or an “extrovert battery”, recharging by being with others or recharging by being alone. I think we probably all have both, but for some people one person a week charges their extrovert battery more than enough, and for others the introvert battery gets all the charge it needs when they spend a few hours asleep. I need a pretty solid dose of both social time and quiet time, but probably just a little more quiet time … which is part of why I’m a blogger instead of a city councilor. Or whatever it is more extroverted people do. 
</span></p>

<div class="footnotes">
  <ol>
    <li id="fn:1">
      <p>I hate that word; I can never spell it correctly.<a href="#fnref:1" rel="reference">&#8617;</a></p>
    </li>
    <li id="fn:2">
      <p>I realize I’m making a bunch of sweeping generalizations here; if you disagree feel free to kindly tell me why I’m wrong. Or just realize that I’m talking about myself here. <a href="#fnref:2" rel="reference">&#8617;</a></p>
    </li>
  </ol>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Pocket: Why I Stopped Reading Websites]]></title>
    <link href="http://PogiNate.github.com/blog/2013/04/14/pocket-why-i-stopped-reading-websites/"/>
    <updated>2013-04-14T10:42:00-06:00</updated>
    <id>http://PogiNate.github.com/blog/2013/04/14/pocket-why-i-stopped-reading-websites</id>
    <content type="html"><![CDATA[<p>Ever since I discovered RSS I’ve had an aversion to reading news stories in someone else’s web page. With the passing of google reader now a fact of life, we’ve got to find other ways to satisfy the need to feed.</p>

<p>Fortunately Read it Later happened. I wasn’t there for the early days; indeed, I discovered this fabulous little tool after it changed its name to <a href="http://getpocket.com/">Pocket</a>, but I still love it, and here’s why: It lets me manage my time better. </p>

<p>Let’s say I’m working on a few feature at work, and I (inevitably) discover an article that is fascinating, well written, not-quite-on-topic, and 2000 words long. I’m not going to bookmark it, bookmarks are too permanent and too ignored to be useful<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>. Usually I would just read the article right there, then try to rebuild the context I had been in. These days I press a little button, wait for the popup that says “Page saved!” and go back to my real research. Then, some time when I’m <a href="http://mike-garcia.com/?p=466">not doing anything specific</a> I can go back to that article and read it all. </p>

<p>This has a lot of nice side affects. My <a href="http://www.pomodorotechnique.com/">Pomodoros</a> are preserved, my focus is maintained, and the part of my brain that is endlessly curious is satisfied that it’s not being ignored.</p>

<p><span class="pullquote-right" data-pullquote="No offense, but I probably hate your web site.">
Another benefit is that <em>your</em> content is now styled <em>my</em> way. No offense, but I probably hate your web site. It probably has ads and  call outs to reasons why you’re cool and probably doesn’t look so hot on  my phone<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup>.  Pocket lets me restyle all of that, and thus I intereact with your core message far more than I would have if I had to put up with your design decisions. <a href="http://alistapart.com">A List Apart</a> has an <a href="http://alistapart.com/column/the-future-is-unevenly-superdistributed" title="The Future is Unevenly Superdistributed">excellent article</a> on this topic, with the following insight that gave me pause:
</span></p>

<blockquote>
  <p>…digital content continues to find novel new ways to wander away from its various points of origin. Tools that give users ever more control over formatting, timeshifting, and sharing will continue to proliferate. </p>
</blockquote>

<p>The fact is that I discovered this article in RSS and read it in Pocket was an interesting testament to the author’s thesis<sup id="fnref:3"><a href="#fn:3" rel="footnote">3</a></sup>.</p>

<div class="footnotes">
  <ol>
    <li id="fn:1">
      <p>Although pinboard is changing that for me; an article on pinboard is forthcoming. Probably.<a href="#fnref:1" rel="reference">&#8617;</a></p>
    </li>
    <li id="fn:2">
      <p>Don’t feel bad; my site is pretty ugly as well. So hit the pocket button on this page, and I promise not to be offended. <a href="#fnref:2" rel="reference">&#8617;</a></p>
    </li>
    <li id="fn:3">
      <p>Also, I really hate A List Apart’s new design. But they’re <a href="http://alistapart.com/article/what-we-learned-in-2012">okay with that</a>.<a href="#fnref:3" rel="reference">&#8617;</a></p>
    </li>
  </ol>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Introducing A.K.A.: The Alias Manager]]></title>
    <link href="http://PogiNate.github.com/blog/2013/04/12/introducing-a-dot-k-a-dot-the-alias-manager/"/>
    <updated>2013-04-12T11:33:00-06:00</updated>
    <id>http://PogiNate.github.com/blog/2013/04/12/introducing-a-dot-k-a-dot-the-alias-manager</id>
    <content type="html"><![CDATA[<p>One of the joys of moving from a Windows machine at work to OSX is that I’m back to having access to the unix command line. The downside, of course, long commands that I <a href="http://xkcd.com/1168/">usually get wrong</a>. </p>

<p>Which is why I spent some time a few weeks ago creating <a href="http://natedickson.com/A.K.A./">A.K.A.</a> Simply put, A.K.A. is a simple way to manage all the aliases that you usually put into your shell of choice’s startup file without editing your dot files by hand or cluttering up your profile when you could be cluttering up a completely separate file. </p>

<p>Now all you have to do is add <code>source ~/.alias</code> and use this script to keep everything nice and organized.</p>

<p>Again, it’s a simple difference; If you know what aliases are you probably aren’t afraid of editing dot files, but <code>aka</code> removes the friction of pulling up your favorite editor, finding where all your aliases are, saving, etc. Everything is a single command issued right at the prompt, all the saving and moving around is handled for you. The result is that I have far <strong>more</strong> aliases, and far more <strong>useful</strong> aliases, because I can add them or change them without breaking my flow. If I realize that I hate typing <code>git status</code> I just run <code>aka -a gs "git status"</code> and now I’ve got a much shorter version of that command. The downside, of course, is that I get intensely frustrated using anyone else’s computer where <code>gs</code> doesn’t work. But I can cope with that.</p>

<p>My favorite (slightly under-documented) command is <code>aka -L</code>, which outputs a nicely formatted list of all your aliases and what they do when you run them. It’s a simple thing, but I like it.</p>

<p>In the event that you actually decide to use this feel free to put suggestions or feature requests or comments either on this page’s comment line or on the <a href="https://github.com/PogiNate/A.K.A.">github page</a>. </p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[(Mostly) MultiMarkdown Blogging in Octopress]]></title>
    <link href="http://PogiNate.github.com/blog/2013/04/09/mostly-multimarkdown-blogging-in-octopress/"/>
    <updated>2013-04-09T09:55:00-06:00</updated>
    <id>http://PogiNate.github.com/blog/2013/04/09/mostly-multimarkdown-blogging-in-octopress</id>
    <content type="html"><![CDATA[<p>So, my big concern in moving over to <a href="http://octopress.org/">Octopress</a> was the lack of MultiMarkdown compatibility. Specifically the lack of footnotes. I <em>think</em> in footnotes a lot of the time<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>. </p>

<p>So it was a definite problem to go to something limited to vanilla markdown. I did a few million hours of web searching to find a way to use MultiMarkdown as my renderer, but for some reason Jekyll is surprisingly resistant to the idea, so I gave up.</p>

<p>For a while. I’m not good at actually giving up. I had made my peace with using non-footnoted code for blogging and had moved on, until I noticed that <a href="http://brettterpstra.com/">Brett Terpstra</a>, who documented his own move to Jekyll based blogging a few months ago, had footnotes aplenty on his blog<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup>. So I asked him how he was pulling that off.</p>

<p>Here’s his answer, in it’s entirety:</p>

<blockquote>
  <p>I just use Kramdown as my processor. Works way better than Maruku or Rdiscount for me.
-Brett</p>
</blockquote>

<p>That’s it, folks. I made a single change to my <code>_config.yml</code> file:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>kramdown now </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="yaml"><span class="line"><span class="l-Scalar-Plain">markdown</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">kramdown</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Bingo! Footnotes<sup id="fnref:3"><a href="#fn:3" rel="footnote">3</a></sup> now work and you get to jump around a lot more when you read my blog.</p>

<p>So that’s it really. If you’ve been looking for a way to use MultiMarkdown features in  your Octopress blogging the problem is really much simpler than you thought. Direct your thanks to Brett.</p>

<div class="footnotes">
  <ol>
    <li id="fn:1">
      <p>All the other MultiMarkdown features are amazingly useful as well, but footnotes are just integral to my writing.<a href="#fnref:1" rel="reference">&#8617;</a></p>
    </li>
    <li id="fn:2">
      <p>I also knew that he’s a big fan of MultiMarkdown, seeing as he’s the creator of <a href="http://brettterpstra.com/2012/02/28/nvalt-2-2-public-beta/">nvALT</a>, <a href="http://markedapp.com/">Marked</a>, and apparently <a href="http://multimarkdown.com/faq/icon">worked</a> with Fletcher T. Penny on the icon for <a href="http://multimarkdown.com">MultiMarkdown Composer</a>.<a href="#fnref:2" rel="reference">&#8617;</a></p>
    </li>
    <li id="fn:3">
      <p>And a lot of other very nice features.<a href="#fnref:3" rel="reference">&#8617;</a></p>
    </li>
  </ol>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ulysses III: A Huge Leap Forward]]></title>
    <link href="http://PogiNate.github.com/blog/2013/04/04/ulysses-iii-a-huge-leap-forward/"/>
    <updated>2013-04-04T15:45:00-06:00</updated>
    <id>http://PogiNate.github.com/blog/2013/04/04/ulysses-iii-a-huge-leap-forward</id>
    <content type="html"><![CDATA[<p>I’ll admit it, I’ve had a sick love/hate relationship with <a href="http://www.ulyssesapp.com/">Ulysses</a> for years. I first heard of it by way of <a href="http://www.literatureandlatte.com/scrivener.php">Scrivener</a>, my beloved freeform creative writing app. And the Ulysses of then just was not a thing of beauty. The interface had a lot of holdovers from early- or pre-OSX days, and was pretty cluttered (which is quite a statement, given <a href="http://www.literatureandlatte.com/gfx/ScrivShots/write_structure_revise.jpg">Scrivener’s interface</a>. I love Scrivener, but it’s clearly a <em>tool</em>…look, I’m off topic again.) and unfriendly. I could see some of the power that was inherent in the product, but it just wasn’t for me.</p>

<p>Well, A few days ago Ulysses III released a brand new version, and they <strong>nailed</strong> it. They took the bold step of abandoning everything they’d done before, threw out the interface entirely, and started over. They took a look at what the OSX world is doing now, in terms of interface, and did that. A very finder-like sidebar gives you access to all your text, organized based on where it lives. (iCloud, on your mac, or, if you have the <a href="http://daedalusapp.com/">Daedalus app</a> for iOS, in your Daedalus iCloud folder) Inside each folder you have your texts, (called “sheets”, as in “sheets of paper”) all of which are auto-saved at all times, so you don’t have to worry about hitting <code>⌘S</code> all the time. It’s a surprisingly slick and easy way to just sit down and <em>write</em> without worrying about filenames or sync options of any such things. You just start writing and worry about organization later, once you’ve got something out there. </p>

<h2 id="the-cons">The Cons</h2>
<p>It’s not all peaches and light, of course. The developers have pointed out that this is a 1.0 release, even if it <em>is</em> called Ulysses III. The app stores its files in <code>.ulysses</code> format, which isn’t interoperable with tools like Marked, which means its a little harder to get previews of your text post-Markdown-rendering. (It’s still quite possible, but not quite easy). It doesn’t natively handle <a href="http://fletcherpenney.net/multimarkdown/">MultiMarkdown</a>, but it exports multimarkdown-compatible footnotes. I’m guessing that the <code>.ulysses</code> file format is a bundle that wraps up all the images and keywords and notes and whatnot, but it does make interoperability with other apps a little harder. </p>

<p>But this is a minor gripe, and isn’t a flaw so much as a design decision that was clearly made with forethought. They decided that Ulysses was written as a creation app. You can share later, but create your text <em>first</em>. </p>

<p>All in all, I’m deeply impressed with the level of polish and attention that went into the latest version, and I’d recommend you pick it up.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Scapple: Letting Your Mind Wander]]></title>
    <link href="http://PogiNate.github.com/blog/2013/04/02/scapple-letting-your-mind-wander/"/>
    <updated>2013-04-02T11:32:00-06:00</updated>
    <id>http://PogiNate.github.com/blog/2013/04/02/scapple-letting-your-mind-wander</id>
    <content type="html"><![CDATA[<p><a href="http://www.literatureandlatte.com/forum/viewforum.php?f=42&amp;sid=2665c0358883722ee7431c87c46199a2">Scapple</a> is a still-in-beta project from <a href="http://literatureandlatte.com">Literature &amp; Latte</a>, the amazing developers who brought the blessed <a href="http://www.literatureandlatte.com/scrivener.php">Scrivener</a> into the world.</p>

<p>I’ve enthused about Scrivener <a href="http://www.favoritethingever.com/2010/10/scrivener/">before</a>, so I’ll refrain for now. But the folks at L&amp;L have an amazing focus on writing and the tools of the trade, and have given us one more tool to make the whole process easier. </p>

<p>Scrivener is a great tool for the actual <em>writing</em> part of writing. You can layout the sections you <strong>want</strong> to write, get a general idea of the shape of the document you’re putting together, and then fill in the blanks as the mood moves you to write a specific section or chapter or however you’ve split up your text. But Scriv isn’t quite as great at the brainstorming part. All your notes have to be in folders or Drafts or anywhere <em>but</em> drafts or whatever, and you don’t quite feel as free to just throw things out there. That’s where Scapple comes in.</p>

<p>Scapple is a brainstorming app, if you have to give it a name. It’s not quite a mind mapping app, because it doesn’t follow “the rules” of mind mapping. Your notes can be thrown willy-nilly onto the sheet, with our without any relation to any other note anywhere. As you scribble down ideas you can link them all up as the linkages become obvious, letting the pattern of what you’re thinking emerge organically. </p>

<p>In addition, all the little bells and whistles you want are there, not cluttering up the plain paper aesthetics of the app, but available if you want them. In true OSX style most of them can be accessed via a free-floating inspector window, and with just a few steps you can color or style individual notes (or groups of notes, for that matter.) No meaning is imposed on anything, so you can use link styles, colors and text sizes to mean whatever you want them to mean. </p>

<p>In general this is a tool that is extremely adept at getting out of your way and letting you think, then popping back into view when you want to tinker a little bit. I found that after throwing a few notes on there about a writing project I wanted to line a few things up to show that they’re equal, if not connected. This was exactly as easy as you would expect: I command-clicked the notes I wanted to line up, right clicked, and there was the align menu. No extra steps, no fuss. </p>

<p>To sum up, this is a great little app that can be a major addition to any creative professional’s workflow. I strongly recommend checking it out. The final retail version should be out soonish, but the beta is free through the end of April. Give it a try.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PLEX Five Years Later]]></title>
    <link href="http://PogiNate.github.com/blog/2013/03/29/plex-five-years-later/"/>
    <updated>2013-03-29T14:55:00-06:00</updated>
    <id>http://PogiNate.github.com/blog/2013/03/29/plex-five-years-later</id>
    <content type="html"><![CDATA[<p>Every so often I come across something that just <em>works</em>, and it makes me happy and I feel like all this tech crap we all do on a daily basis is actually worth it. </p>

<p>Even better, sometimes I come across something that was rough around the edges <a href="http://crazyapplenews.com/2009/07/friday-ifaq-plex/">last time I tried it</a>, but now I discover that it’s clean, refined, and super useful. I’m happy to report that this is one of those times. I’ve recently come back to <a href="http://www.plexapp.com/">Plex</a> after a few years of ignoring it, and it works amazingly. </p>

<p>For those of you who don’t know, the <strong>Plex</strong> moniker actually refers to a myriad of products that work together. The cornerstone of the lineup is <strong>Plex Server</strong>, which resides on whatever computer is (or computers are) storing all of your recorded movies/television shows/audio files/etc. As you would expect, it serves up your media to any of your Plex Clients, which are available on iOS, Android, Windows, Mac, Linux, etc. etc. The clients are pretty great at finding a server on the local network (or on the local box, if you’re running your client and server on the same machine), but Plex has a better trick up it’s sleeve.</p>

<p>If you choose to set up a <strong><a href="https://my.plexapp.com/queue">MyPlex</a></strong> account it acts as a middle man for helping your servers and clients find each other anywhere on the internet. Basically, if you sign in to MyPlex from all your servers and all your clients it will take care of all your connectivity and you’re golden.</p>

<p>But there are still times and places that don’t work so well. My day job has a very restrictive firewall on their network, which blocks pretty much every port other than 80 and 443. So even with MyPlex’s magic, I can’t connect to my home servers to stream things on my lunch breaks. Now what?</p>

<p>Well, now you purchase a <strong>PlexPass</strong> and get access to their sync feature. Most of the Plex software is free or fairly cheap (the server and desktop clients are free, the iOS and Android clients are $5). PlexPass is a bit more ($30/year) but it gives you access features that aren’t yet available for free, including beta versions of the clients. Anyway, back to syncing.</p>

<p><strong>Plex Sync</strong> is not creatively named, but it’s <em>awesome</em>. When your device is able to connect to your server tell it what media you want to have synced. If you choose a TV series you can tell it “keep the next <code>X</code> unwatched episodes on my device” and it’ll have your server transcode those episodes into a format your device understands and ship them on over. When you watch one (if you’re still connected) it’ll prep a new one while you’re watching and keep you up to date. If you’re actually disconnected then the episodes you’ve synced are all your Plex client will show.</p>

<p>All the usual awesomeness you’d expect from an app like this is built in as well. The iOS client app acts as a remote for any other client connected to your server. If you are a big fan of XBMC then your XBMC installation can read Plex files and the two work together perfectly. If you have a Roku player you’re also taken care of. Plex and Roku work just great together. </p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Originally About Scrivener but Turned into Something Else]]></title>
    <link href="http://PogiNate.github.com/blog/2013/03/25/originally-about-scrivener-but-turned-into-something-else/"/>
    <updated>2013-03-25T12:09:00-06:00</updated>
    <id>http://PogiNate.github.com/blog/2013/03/25/originally-about-scrivener-but-turned-into-something-else</id>
    <content type="html"><![CDATA[<p>I have been a huge fan of <a href="http://www.literatureandlatte.com/scrivener.php">Scrivener</a> for years. I love the freedom it gives me to organize a story however I want it, to color code, label, sort, search and tag my text.</p>

<p>But all of this, of course, can actually <em>hamper</em> productivity if you start letting it run your workflow. You can spend so much time going through your manuscript updating keywords that you forget to actually do any writing. This trap is especially easy to fall into if you, like me, suffer from a serious mental condition called <em>“Self-inflicted Terminal Unjustified Paranoia of Invisible Detractors”</em>, or <strong>STUPID</strong> for short.</p>

<p>STUPID is a condition where you believe that someone, somewhere is looking over your shoulder and judging what you’re doing to be of no worth, that someone is picking apart your workflow and finds it erratic and inefficient, or that someone will take a look at how you are using  your tool of choice and pick all your decisions apart. </p>

<p>If left untreated, STUPID can cause you to dry up, stop being creative, and spend excessive amounts of time worrying about productivity instead of actually <em>being</em> productive.</p>

<p>STUPID is rampant in people who consider themselves internet denizens; people like bloggers, authors, and creative professionals. But STUPID is older than the internet, and has been affecting similar personality types for years. Early warning signs for the onset of STUPID include dithering around with todo list software, pomodoro spreadsheets, and other such things that are meant to help you be more productive. In its advanced stages the victim may need to be given a management style job. </p>

<p>Once a case of STUPID is self diagnosed (and it can only be <em>self</em>-diagnosed; external diagnoses are worthless. ) the treatment is fortunately inexpensive. In mild cases most practitioners recommend a quiet walk followed by some time spent in a free write scenario, where the victim is forced to <em>just keep producing</em> without listening to their internal critic. A standard therapeutic session should last for at least half an hour. This treatment should be continued for life, as it has also been found to be an effective preventative. </p>

<p>Very little of this has to do with Scrivener, of course. I meant to write an article about using Scrivener to actually do productive work, but I got sidetracked thinking about how to use it more productively. </p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vines Through the Garden Wall]]></title>
    <link href="http://PogiNate.github.com/blog/2013/03/22/vines-through-the-garden-wall/"/>
    <updated>2013-03-22T09:23:00-06:00</updated>
    <id>http://PogiNate.github.com/blog/2013/03/22/vines-through-the-garden-wall</id>
    <content type="html"><![CDATA[<p>Apple lives a strange double life. They’ve always had a strange love/hate relationship with developers: they want great 3rd party apps, but they want everything to be <em>just right</em>, and if you don’t agree with their vision of <em>just right</em> then you’re plain wrong.</p>

<p>And over time we’ve seen that weird divide get weirder on OSX. On the surface you’ve got Gatekeeper, designed to keep the weeds out of the walled garden, but fire up the terminal, install <a href="http://mxcl.github.com/homebrew/">Homebrew</a> and suddenly you’ve got the whole world of open source software all over your nice shiny Mac, with not a peep out of Gatekeeper. and frankly I think that’s fine. If people don’t want to worry about their computer and just want to install things from the Mac App Store then let them live that way. But for those of us who kind of like all the wild plants inside the walled garden let us install whatever we want.</p>

<p>Unfortunately iOS doesn’t get the same freedom. <strong>All</strong> apps are tightly sandboxed, and absolutely not allowed to talk to one another. You keep your code to yourself and pretend you don’t know anybody else exists. The Walled Garden is walled all the way up and down.</p>

<p>Except…there is one crack.</p>

<p>Some blessed engineer decided that it would be good if apps could talk to one another, at least rudimentarily. Using the <a href="http://handleopenurl.com/">Open Url Scheme</a> you can pass commands and strings back and forth between apps. It’s a surprisingly open, beautifully object-oriented method of dealing with a common problem. As long as the receiving app knows how to handle the commands sent by the calling app it handles it and you’ve got a vine through the wall.</p>

<p>A few beautiful wild plants have sprung up using this method of communication to enhance your entire workflow. <a href="http://agiletortoise.com/drafts">Drafts</a>, and it’s ultra-literate sibling <a href="http://agiletortoise.com/terminology/">Terminology</a> use it, to great effect. Drafts let you create text and pass it just about <em>anywhere</em> to use however you want. Dropbox and Evernote both respond to url schemes to allow you to create new notes. </p>

<p>But even more amazing is <a href="http://omz-software.com/pythonista/">Pythonista</a>. Somehow omz software managed to get the entire python 2.7 runtime into iOS, and you can create workflows that send data into and out of your python scripts, again using url schemes. For example, I have a bookmarklet in Safari that works like this:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span class="nx">javascript</span><span class="o">:</span><span class="nb">window</span><span class="p">.</span><span class="nx">location</span><span class="o">=</span><span class="s1">&#39;pythonista://my_script?action=run&amp;argv=&#39;</span><span class="o">+</span><span class="nb">encodeURIComponent</span><span class="p">(</span><span class="nx">location</span><span class="p">.</span><span class="nx">href</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>When I find a page that I want to pass into my script (the functionality of which is beyond the script of this article, and is <em>at the same time</em> incredibly dull) I just hit that bookmarklet and a few seconds later Pythonista has modified the text and passed it on to Drafts, which in turn can send it on to Dropbox. Suddenly the garden walls don’t seem as impenetrable. </p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Exploring the Old Ways]]></title>
    <link href="http://PogiNate.github.com/blog/2013/03/21/exploring-the-old-ways/"/>
    <updated>2013-03-21T17:36:00-06:00</updated>
    <id>http://PogiNate.github.com/blog/2013/03/21/exploring-the-old-ways</id>
    <content type="html"><![CDATA[<p>It all started when I decided that I wanted to try shaving with a brush and soap instead of canned shaving cream. It seemed possible that there was some advantage to be had here.</p>

<p>And maybe someday I’ll get into the wonders of shaving like a real man. It takes more time, it requires a few more seconds every morning, and there’s a little learning curve involved. But for now that’s not the point. The point is it got me thinking; what other good ideas am I missing out on because something newer has come along; something that isn’t necessarily better? </p>

<p>This is a hard concept. “<a href="www.youtube.com/watch?v=RsLdLKT9Vvs">New is always better</a>” <em>sounds</em> true, especially in technology fields. We often make the assumption that something new is built to improve on something old, and therefore the only direction to move is forward. But slowly, little by little, I realized that sometimes the improvements that have been made weren’t meant to make things better for <em>me</em>, but to make them better for the manufacturer, or the distributor, or whoever. (Especially in the case of shaving cream vs. shaving soap, but again, not getting into that right now.)</p>

<p>Or maybe sometimes it’s worth it to put in the extra effort to make an older product work, because there are reasons that it’s still around. Maybe tradition counts for something. </p>

<p>So, not to belabor this point too much, I started using vim. </p>

<h2 id="the-old-is-new-again">The Old is New Again</h2>

<p>Don’t get me wrong, I still love <a href="http://sublimetext.com">Sublime Text</a>. But I decided that it’s time to learn how to edit from the command line and stop being afraid of the text editor that comes free with every <em>nix machine ever. And like anyone will tell you, learning vim has been an uphill climb. Sublime Text’s “vintage” mode has helped, because I still have all the features that make me love Sublime, and I can drop into Insert Mode and pretend I’m not using a vi-style editor at all when I get discouraged and just want to get some work done, but I’m learning how to use vim the way it was meant to be used. And I’m starting to see why all the open source graybeards look down on everyone else. Because they’re pompous and arrogant. I mean, we already knew that. But *also</em> because doing things the vim way gives you some definite flexibility that you don’t have with most modern programs. </p>

<p>A big part of that is because when vi was written you really did want to make every keystroke count, and you really did have to do everything from the keyboard. So the people who thought about it really <em>really</em> thought about it, and set up some standards that made the most of that era. And when the mouse came along we forgot most of that, because learning how to click on menus is simple and anyone can do it. But you’ve lost some of the grace that was implicit in the old ways of doing things.</p>

<p>So that’s all. I’m not suggesting that non-vim users are idiots, or that there is only one right way to edit text. In fact, I’m currently writing this in <a href="http://multimarkdown.com">MultiMarkdown Composer</a>. And while I’m still slow at a lot of things, but working in vim has made me think about how I work and what paradigms I’ve taken for granted.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[tmux and Octopress]]></title>
    <link href="http://PogiNate.github.com/blog/2013/03/21/tmux-and-octopress/"/>
    <updated>2013-03-21T05:22:00-06:00</updated>
    <id>http://PogiNate.github.com/blog/2013/03/21/tmux-and-octopress</id>
    <content type="html"><![CDATA[<p>Naturally, the first thing I did after getting Octopress up, running, and actually <em>deployed</em> to a real live server was set up a writing workflow that will make it easy to post to this blog. And by “easy”, I of course mean “weird and convoluted, but in a way that makes sense to me”. What else would I mean?</p>

<p>The first ingredient in my workflow is <a href="http://tmux.sourceforge.net/">tmux</a>. If you haven’t played with it yet you’ll find that  it’s a fast and easy way to access your project from multiple angles. You’ll have one terminal window open and in that one window you can be editing a file, keeping an eye on <code>top</code> and running your build tasks all at once, while a second tab has your development server running in it. I discovered tmux using Brian Hogan’s <a href="http://pragprog.com/book/bhtmux/tmux">amazing book</a> and haven’t looked back. </p>

<p>The second part of the recipe here is <a href="https://github.com/aziz/tmuxinator">tmuxinator</a>, a nice little ruby app that lets you set up tmux layouts in <code>YAML</code> instead of writing the commands out as actual tmux commands, like so:</p>

<div><script src="https://gist.github.com/5212311.js"></script>
<noscript><pre><code /></pre></noscript></div>

<p>You can see I have <code>rake preview</code> and <code>top</code> running on a “background” tab, so I can preview the site, and <code>vim</code> running on the first tab with a couple of regular old <code>zsh</code> panes at the project root and at the <code>_posts</code> directory, so I can issue other commands to the system and use Marked.app to preview my posts, etc. etc.  </p>

<p>Obviously I haven’t been using this particular setup for all that long yet, but it’s got a lot of promise. I’m pleased with how it’s turning out.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Moving to Octopress]]></title>
    <link href="http://PogiNate.github.com/blog/2013/03/20/moving-to-octopress/"/>
    <updated>2013-03-20T15:16:00-06:00</updated>
    <id>http://PogiNate.github.com/blog/2013/03/20/moving-to-octopress</id>
    <content type="html"><![CDATA[<p>So hey, I’m moving this blog to Octopress now. I don’t need it running on a big ol’ WordPress install with all those updates and whatnot; I just want a simple blog that I can update without using any tools more complex than <code>vim</code> and <code>git</code>. </p>

<p>More posts to come; also I’ll be archiving the entire old site somewhere safe and sound so that anyone who wants to see what I wrote in the past can do so. For now the WordPress site is still up and running <a href="http://old.natedickson.com/">here</a>.  </p>
]]></content>
  </entry>
  
</feed>
