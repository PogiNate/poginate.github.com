<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: painless tmux | Nate Dickson]]></title>
  <link href="http://natedickson.com/blog/categories/painless-tmux/atom.xml" rel="self"/>
  <link href="http://natedickson.com/"/>
  <updated>2014-08-14T12:49:53-06:00</updated>
  <id>http://natedickson.com/</id>
  <author>
    <name><![CDATA[Nate Dickson]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Using Vim and Scrivener Together]]></title>
    <link href="http://natedickson.com/blog/2014/07/02/using-vim-and-scrivener-together/"/>
    <updated>2014-07-02T15:50:25-06:00</updated>
    <id>http://natedickson.com/blog/2014/07/02/using-vim-and-scrivener-together</id>
    <content type="html"><![CDATA[<p>I’ve been working on <a href="http://leanpub.com/painless_tmux">Painless Tmux</a> and trying to apply a lot of what I learned while writing <a href="http://leanpub.com/painless_vim">Painless Vim</a> to make the process easier and more streamlined. </p>

<p>And one of the problems that I’ve been beating my head against is this:</p>

<p>Tables. </p>

<p>Tables in Markdown are a mess. Understandably so, because you’re trying to keep everything nicely lined up in plain text, which just doesn’t happen. Compound that with proportional fonts in Scrivener and you have something that nobody should ever have to look at. There’s a couple of problems here, of course. </p>

<p>The first is that it’s easy for bugs to hide in messy code<sup id="fnref:orText"><a href="#fn:orText" rel="footnote">1</a></sup>, and I’ve had to run my manuscript files through Leanpub’s markdown generator multiple times before I got my tables right. </p>

<p>So: step one: after putting all the data in a table let’s get the table all lined up and looking nice. This is where vim steps in. Specifically, vim with the <a href="https://github.com/godlygeek/tabular">Tabular</a> plugin. </p>

<p>Using Tabular I can turn a table that looks like this:</p>

<pre><code>| Heading 1 | Heading 2 |  
|  ------ | ------ |  
| some text | A second bit o' text |   
| Still more text, this time of a different length | small text	| 
</code></pre>

<p>into this:</p>

<pre><code>| Heading 1                                        | Heading 2            |
| ------                                           | ------               |
| some text                                        | A second bit o' text |
| Still more text, this time of a different length | small text           |
</code></pre>

<p>all by typing <code>:Tab /|</code> in vim<sup id="fnref:learnMore"><a href="#fn:learnMore" rel="footnote">2</a></sup>. </p>

<p>So far so good. But when I paste this back into Scrivener it looks terrible again, because Scrivener uses proportional fonts<sup id="fnref:myScriv"><a href="#fn:myScriv" rel="footnote">3</a></sup>:</p>

<p><img src="/assets/images/kerned-scriv.png" title="Scrivener with proportional text" ></p>

<p>This was an even easier problem to solve, I just didn’t realize it it until today. Scrivener lets you use all kinds of rich text features while writing, all of which it ignores when exporting or compiling your text for output. This means, of course, that I can style my tables with a monospaced font and suddenly they line up the way they were supposed to all along. </p>

<p><img src="/assets/images/monospaced-scriv.png" title="Scrivener with Monospaced text" ></p>

<p>But changing the fonts manually every time I make a table is a drag. Enter the “presets” feature that Scrivener uses. Its basically the Apple “Styles” menu, but enhanced and made more Scrivener-like. All I had to do was highlight the monospaced section, then in the menu go to <code>Format-&gt;Formatting-&gt;New Preset From Selection</code> and now I can make any of my text nicely monospaced with the click of a button. And while I was at it I re-styled the “Body” preset to be the the way I (currently) like it. </p>

<p>So there you have it: a couple of simple, common sense tips for making tables less of a nightmare in your Markdown manuscripts. Enjoy!</p>

<hr />

<div class="footnotes">
  <ol>
    <li id="fn:orText">
      <p>or semantically marked text. Stay with me here.<a href="#fnref:orText" rel="reference">&#8617;</a></p>
    </li>
    <li id="fn:learnMore">
      <p>See <a href="http://vimcasts.org/episodes/aligning-text-with-tabular-vim/">Aligning Text with Tabular.vim</a> for a full explanation of how the plugin works. <a href="#fnref:learnMore" rel="reference">&#8617;</a></p>
    </li>
    <li id="fn:myScriv">
      <p>Sure, you <em>could</em> use monospaced fonts in Scrivener, but not in <em>my</em> Scrivener. Unless I’m writing code I like my fonts properly kerned, thank you. <a href="#fnref:myScriv" rel="reference">&#8617;</a></p>
    </li>
  </ol>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Introducing Painless Tmux]]></title>
    <link href="http://natedickson.com/blog/2014/06/09/introducing-painless-tmux/"/>
    <updated>2014-06-09T08:58:01-06:00</updated>
    <id>http://natedickson.com/blog/2014/06/09/introducing-painless-tmux</id>
    <content type="html"><![CDATA[<p><img class="right" src="/assets/images/pt_cover_web.png" title="Painless Tmux Cover" ></p>

<p>For about the last year I’ve been working on <a href="https://leanpub.com/painless_vim"><em>Painless Vim</em></a>, and really enjoying it. I’ve learned a lot about writing, and of course I’ve learned a lot about vim. But for the last little while it’s been slowing down. I’ve written all the text, and I’ve been through a few rounds of revisions, both from changes made by editors and from changes suggested by readers. And now it’s pretty much done. Sure, there are a few revisions left to make, but they’re nothing compared to the work I’ve been putting into it over the previous months. </p>

<p>So I decided to write <em>another</em> book. You see, I realized that, while I use vim for basically all my programming work, that’s only half the story. Vim is great, but there’s no real reason to use a terminal based text editor if that’s <em>all</em> you’re doing from the terminal. And for the past year or more, while I’ve been learning and writing about vim, I’ve also been using <strong>tmux</strong> to get more out of my terminal, and to compliment and augment vim’s power.</p>

<p>So I’m writing a book to compliment and augment <em>Painless Vim</em>. </p>

<p><a href="https://leanpub.com/painless_tmux"><em>Painless Tmux</em></a> is brand new, and as I write this it’s only 15 pages long. There’s a lot of life ahead of it, and I’m really excited about this one. For one thing, tmux is <em>so much easier</em> to use and to learn than vim. Especially if you’re already using vim. </p>

<p>Together, vim and tmux let you do pretty much everything, all from the keyboard. so, I’m also offering the <a href="https://leanpub.com/b/painless_productivity">two books as a bundle</a>, for significantly less than buying them separately. Basically if you buy the bundle you get <em>Painless Tmux</em> for a dollar. </p>

<p>When I started <em>Painless Vim</em> I didn’t really know what I was getting myself into. I figured it would take a month, tops. Well, this time, I <em>do</em> know what I’m getting myself into and I’m excited to get into it. </p>
]]></content>
  </entry>
  
</feed>
