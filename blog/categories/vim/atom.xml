<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: vim | Nate Dickson]]></title>
  <link href="http://natedickson.com/blog/categories/vim/atom.xml" rel="self"/>
  <link href="http://natedickson.com/"/>
  <updated>2014-07-09T16:14:57-06:00</updated>
  <id>http://natedickson.com/</id>
  <author>
    <name><![CDATA[Nate Dickson]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Using Vim and Scrivener Together]]></title>
    <link href="http://natedickson.com/blog/2014/07/02/using-vim-and-scrivener-together/"/>
    <updated>2014-07-02T15:50:25-06:00</updated>
    <id>http://natedickson.com/blog/2014/07/02/using-vim-and-scrivener-together</id>
    <content type="html"><![CDATA[<p>I’ve been working on <a href="http://leanpub.com/painless_tmux">Painless Tmux</a> and trying to apply a lot of what I learned while writing <a href="http://leanpub.com/painless_vim">Painless Vim</a> to make the process easier and more streamlined. </p>

<p>And one of the problems that I’ve been beating my head against is this:</p>

<p>Tables. </p>

<p>Tables in Markdown are a mess. Understandably so, because you’re trying to keep everything nicely lined up in plain text, which just doesn’t happen. Compound that with proportional fonts in Scrivener and you have something that nobody should ever have to look at. There’s a couple of problems here, of course. </p>

<p>The first is that it’s easy for bugs to hide in messy code<sup id="fnref:orText"><a href="#fn:orText" rel="footnote">1</a></sup>, and I’ve had to run my manuscript files through Leanpub’s markdown generator multiple times before I got my tables right. </p>

<p>So: step one: after putting all the data in a table let’s get the table all lined up and looking nice. This is where vim steps in. Specifically, vim with the <a href="https://github.com/godlygeek/tabular">Tabular</a> plugin. </p>

<p>Using Tabular I can turn a table that looks like this:</p>

<pre><code>| Heading 1 | Heading 2 |  
|  ------ | ------ |  
| some text | A second bit o' text |   
| Still more text, this time of a different length | small text	| 
</code></pre>

<p>into this:</p>

<pre><code>| Heading 1                                        | Heading 2            |
| ------                                           | ------               |
| some text                                        | A second bit o' text |
| Still more text, this time of a different length | small text           |
</code></pre>

<p>all by typing <code>:Tab /|</code> in vim<sup id="fnref:learnMore"><a href="#fn:learnMore" rel="footnote">2</a></sup>. </p>

<p>So far so good. But when I paste this back into Scrivener it looks terrible again, because Scrivener uses proportional fonts<sup id="fnref:myScriv"><a href="#fn:myScriv" rel="footnote">3</a></sup>:</p>

<p><img src="/assets/images/kerned-scriv.png" title="Scrivener with proportional text" ></p>

<p>This was an even easier problem to solve, I just didn’t realize it it until today. Scrivener lets you use all kinds of rich text features while writing, all of which it ignores when exporting or compiling your text for output. This means, of course, that I can style my tables with a monospaced font and suddenly they line up the way they were supposed to all along. </p>

<p><img src="/assets/images/monospaced-scriv.png" title="Scrivener with Monospaced text" ></p>

<p>But changing the fonts manually every time I make a table is a drag. Enter the “presets” feature that Scrivener uses. Its basically the Apple “Styles” menu, but enhanced and made more Scrivener-like. All I had to do was highlight the monospaced section, then in the menu go to <code>Format-&gt;Formatting-&gt;New Preset From Selection</code> and now I can make any of my text nicely monospaced with the click of a button. And while I was at it I re-styled the “Body” preset to be the the way I (currently) like it. </p>

<p>So there you have it: a couple of simple, common sense tips for making tables less of a nightmare in your Markdown manuscripts. Enjoy!</p>

<hr />

<div class="footnotes">
  <ol>
    <li id="fn:orText">
      <p>or semantically marked text. Stay with me here.<a href="#fnref:orText" rel="reference">&#8617;</a></p>
    </li>
    <li id="fn:learnMore">
      <p>See <a href="http://vimcasts.org/episodes/aligning-text-with-tabular-vim/">Aligning Text with Tabular.vim</a> for a full explanation of how the plugin works. <a href="#fnref:learnMore" rel="reference">&#8617;</a></p>
    </li>
    <li id="fn:myScriv">
      <p>Sure, you <em>could</em> use monospaced fonts in Scrivener, but not in <em>my</em> Scrivener. Unless I’m writing code I like my fonts properly kerned, thank you. <a href="#fnref:myScriv" rel="reference">&#8617;</a></p>
    </li>
  </ol>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Fluency]]></title>
    <link href="http://natedickson.com/blog/2013/12/30/fluency/"/>
    <updated>2013-12-30T08:12:00-07:00</updated>
    <id>http://natedickson.com/blog/2013/12/30/fluency</id>
    <content type="html"><![CDATA[<p>In 1998 I served an <a href="http://mormon.org/values/missionary-work">LDS Mission</a> to the Philippines. Those of you who are familiar with how LDS missionaries operate know the drill: you spend ten weeks learning the language in a classroom setting and then you get sent out with a more experienced missionary to try it on your own. And anyone who has ever tried to speak a language they’ve only heard in a classroom setting knows what comes next: you spend a lot of time staring at people who speak a language you thought you were pretty good at, and you have no idea what they’re saying. </p>

<p>So I set myself some goals. I wanted to laugh at a Tagalog joke, because I actually understood it. I wanted to get my accent to be less terrible<sup id="fnref:accent"><a href="#fn:accent" rel="footnote">1</a></sup>, and I wanted to actually think in Tagalog. These were little stepping stones I set for myself, goals I was trying to reach to show that I was actually gaining some actual fluency in the language. </p>

<p>Surround your pullquote like this {" text to be quoted "}</p>

<p>One of those difficult things has been learning vim. While I’ve been teaching myself to use it<sup id="fnref:painlessplug"><a href="#fn:painlessplug" rel="footnote">3</a></sup> I’ve had a lot of moments where it just seemed too hard, too useless, and I had to set myself some goals. They were simpler goals, things like “don’t lose half a file and have to restore it from my git backups again today”, and then more useful goals, like “actually use the search and replace engine,” followed shortly by “actually use vim’s regex engine without the <code>very magic</code> flag”. Litte steps to show that I was making progress. </p>

<p>And one day, just a little while ago, I had a simple task ahead of me: remove the last three arguments from a function declaration. Without really thinking about it I got my cursor inside the parentheses and since my cursor was just before the closing paren I typed</p>

<pre><code>d3F,
</code></pre>

<p>And that was it. In English<sup id="fnref:kinda"><a href="#fn:kinda" rel="footnote">4</a></sup> it’s “delete back through the third comma before the cursor”. But that’s not the point. The point is that I just <em>did</em> it, without looking at a cheat sheet, without using help, without standing there for two minutes trying to figure out how to do what I knew I wanted to do. It was the “Kaya kong ito” moment all over again. I know I’ve still got a lot of vim to learn, but it’s clear that something is happening, and I’m learning something.</p>

<hr />

<div class="footnotes">
  <ol>
    <li id="fn:accent">
      <p>According a couple of people who knew me early in my mission I was attempting to speak Tagalog with a British accent. Given the fact that I grew up in Boise, Idaho I can only imagine how terrible that sounded.<a href="#fnref:accent" rel="reference">&#8617;</a></p>
    </li>
    <li id="fn:sorta">
      <p>More or less. It’s not grammatically perfect, but it’s close enough that people would have understood what I meant.<a href="#fnref:sorta" rel="reference">&#8617;</a></p>
    </li>
    <li id="fn:painlessplug">
      <p>and <a href="http://leanpub.com/painless_vim">writing a book</a> about using vim.<a href="#fnref:painlessplug" rel="reference">&#8617;</a></p>
    </li>
    <li id="fn:kinda">
      <p>More or less. I’m sure there’s a better way to do this, and probably a better way to explain it, but it’s close enough that vim understood what I meant.<a href="#fnref:kinda" rel="reference">&#8617;</a></p>
    </li>
  </ol>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Free Books!]]></title>
    <link href="http://natedickson.com/blog/2013/07/11/free-books/"/>
    <updated>2013-07-11T09:11:00-06:00</updated>
    <id>http://natedickson.com/blog/2013/07/11/free-books</id>
    <content type="html"><![CDATA[<p>So, I recently put a coupon up on <a href="https://twitter.com/poginate">Twitter</a> and <a href="https://alpha.app.net/poginate">App.net</a> offering ten people the opportunity to get a free copy of my book <em><a href="https://leanpub.com/painless_vim">Painless Vim</a></em>, which is still very much in <strong>alpha</strong>. But I figured attracting a few extra readers couldn’t do anything but help. </p>

<p>And in next to no time all ten free copies were gone, which is awesome. I’m not so much about the money on this one, I’m just enjoying writing it and really want to see it published and hopefully help a few people. </p>

<p>Anyway, it occurred to me that I hadn’t offered free copies to any of my faithful blog followers! So, here’s the deal: here’s another coupon code, also good for the first 10, nah, let’s say 20 people, but the condition is that I <em>really</em> would like any feedback you have about the book, even in this early state. Okay, ready? Here’s the skinny:</p>

<ol>
  <li>Go to <a href="https://leanpub.com/painless_vim">https://leanpub.com/painless_vim</a></li>
  <li>buy the book using the coupon code <strong>Blog20</strong>. <sup id="fnref:paymor"><a href="#fn:paymor" rel="footnote">1</a></sup></li>
  <li>Give me some awesome and useful feedback on the book either through the Leanpub site, as a comment on this site. Or ping me on <a href="https://twitter.com/poginate">Twitter</a>/<a href="https://alpha.app.net/poginate">App.net</a> with the hashtag #PainlessVim. However you get the feedback to me I will definitely take it into consideration and use it to improve the book.</li>
</ol>

<hr />

<div class="footnotes">
  <ol>
    <li id="fn:paymor">
      <p>And if you <em>want</em> to pay more than nothing I won’t stop you! Seriously! I’d be fine with it!<a href="#fnref:paymor" rel="reference">&#8617;</a></p>
    </li>
  </ol>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Exploring the Old Ways]]></title>
    <link href="http://natedickson.com/blog/2013/03/21/exploring-the-old-ways/"/>
    <updated>2013-03-21T17:36:00-06:00</updated>
    <id>http://natedickson.com/blog/2013/03/21/exploring-the-old-ways</id>
    <content type="html"><![CDATA[<p>It all started when I decided that I wanted to try shaving with a brush and soap instead of canned shaving cream. It seemed possible that there was some advantage to be had here.</p>

<p>And maybe someday I’ll get into the wonders of shaving like a real man. It takes more time, it requires a few more seconds every morning, and there’s a little learning curve involved. But for now that’s not the point. The point is it got me thinking; what other good ideas am I missing out on because something newer has come along; something that isn’t necessarily better? </p>

<p>This is a hard concept. “<a href="www.youtube.com/watch?v=RsLdLKT9Vvs">New is always better</a>” <em>sounds</em> true, especially in technology fields. We often make the assumption that something new is built to improve on something old, and therefore the only direction to move is forward. But slowly, little by little, I realized that sometimes the improvements that have been made weren’t meant to make things better for <em>me</em>, but to make them better for the manufacturer, or the distributor, or whoever. (Especially in the case of shaving cream vs. shaving soap, but again, not getting into that right now.)</p>

<p>Or maybe sometimes it’s worth it to put in the extra effort to make an older product work, because there are reasons that it’s still around. Maybe tradition counts for something. </p>

<p>So, not to belabor this point too much, I started using vim. </p>

<h2 id="the-old-is-new-again">The Old is New Again</h2>

<p>Don’t get me wrong, I still love <a href="http://sublimetext.com">Sublime Text</a>. But I decided that it’s time to learn how to edit from the command line and stop being afraid of the text editor that comes free with every <em>nix machine ever. And like anyone will tell you, learning vim has been an uphill climb. Sublime Text’s “vintage” mode has helped, because I still have all the features that make me love Sublime, and I can drop into Insert Mode and pretend I’m not using a vi-style editor at all when I get discouraged and just want to get some work done, but I’m learning how to use vim the way it was meant to be used. And I’m starting to see why all the open source graybeards look down on everyone else. Because they’re pompous and arrogant. I mean, we already knew that. But *also</em> because doing things the vim way gives you some definite flexibility that you don’t have with most modern programs. </p>

<p>A big part of that is because when vi was written you really did want to make every keystroke count, and you really did have to do everything from the keyboard. So the people who thought about it really <em>really</em> thought about it, and set up some standards that made the most of that era. And when the mouse came along we forgot most of that, because learning how to click on menus is simple and anyone can do it. But you’ve lost some of the grace that was implicit in the old ways of doing things.</p>

<p>So that’s all. I’m not suggesting that non-vim users are idiots, or that there is only one right way to edit text. In fact, I’m currently writing this in <a href="http://multimarkdown.com">MultiMarkdown Composer</a>. And while I’m still slow at a lot of things, but working in vim has made me think about how I work and what paradigms I’ve taken for granted.</p>

]]></content>
  </entry>
  
</feed>
